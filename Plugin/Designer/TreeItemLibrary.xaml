<TreeViewItem x:Name="TreeViewItem" x:Class="Designer.LibraryTreeItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"

             mc:Ignorable="d" FontSize="12" Loaded="TreeViewItem_Loaded" 
              Style="{DynamicResource TreeViewItemStyle1}" HorizontalAlignment="Left" VerticalAlignment="Top" 
              FocusableChanged="TreeViewItem_FocusableChanged"
              LostFocus="TreeViewItem_LostFocus" GotFocus="TreeViewItem_GotFocus" 
              MouseEnter="TreeViewItem_MouseEnter" 
              MouseLeave="TreeViewItem_MouseLeave" 
              Selected="TreeViewItem_Selected" 
              Unselected="TreeViewItem_UnSelected" 
              MouseDoubleClick="TreeViewItem_DoubleClick" 
              MouseLeftButtonUp="TreeViewItem_MouseLeftButtonUp" 
              KeyUp="TreeViewItem_KeyUp" 
              MouseRightButtonDown="TreeViewItem_MouseRightButtonDown" 
              MouseMove="TreeViewItem_MouseMove"
              PreviewMouseDoubleClick="TreeViewItem_PreviewDoubleClick"
              >

    <TreeViewItem.Resources>
         <Style x:Key="SimpleTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid Width="15" Height="13" Background="Transparent">
                                <Path Visibility="Collapsed" HorizontalAlignment="Left" Margin="0" x:Name="IsExpandedPath" VerticalAlignment="Center" Fill="#FFC4D49F" Data="M 0 4 L 8 4 L 4 8 Z"/>
                                <Path HorizontalAlignment="Left" Margin="0" x:Name="ExpandPath" VerticalAlignment="Center" Data="M 4 0 L 8 4 L 4 8 Z" Fill="#FFC4D49F"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="IsExpandedPath"/>
                                    <Setter Property="Opacity" TargetName="ExpandPath" Value="1"/>
                                    <Setter Property="Opacity" TargetName="IsExpandedPath" Value="1"/>
                                    <Setter Property="Fill" TargetName="IsExpandedPath" Value="#FFC4D49F"/>
                                    <Setter Property="Visibility" TargetName="ExpandPath" Value="Hidden"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#FFC4D49F"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        <Color x:Key="BH Text">#FF000000</Color>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="#FFC4D49F" Stroke="#FFC4D49F">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FFC4D49F"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FFC4D49F"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FFC4D49F"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FFC4D49F"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="0" Width="0"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" Visibility="Hidden" Margin="1.5,1.75,1.5,0.25"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="#00D06161">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" Margin="19,0,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="False"/>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="#FF814933"/>
                                <Setter Property="Background" TargetName="Bd" Value="#00E7D82A"/>
                                <Setter Property="Background" Value="{x:Null}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#ABADB3" Offset="0.05"/>
            <GradientStop Color="#E2E3EA" Offset="0.07"/>
            <GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="18" Margin="0,-4,0,0"/>
                            <!--Width="124.827"-->
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Storyboard x:Key="OnMouseEnter1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgTreeDelete">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.8"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1" KeySpline="0,0.72,0.36,1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeave1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgTreeDelete">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0.8" KeySpline="0,0.62,0.51,1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="imgTreeAdd_MouseOver">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgTreeAdd">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="imgTreeAdd_MouseLeave">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgTreeAdd">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.8"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </TreeViewItem.Resources>
    <TreeViewItem.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="imgTreeDelete">
            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="imgTreeDelete">
            <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="imgTreeAdd_MouseOver_BeginStoryboard" Storyboard="{StaticResource imgTreeAdd_MouseOver}"/>
            <BeginStoryboard x:Name="imgTreeAdd_MouseLeave_BeginStoryboard" Storyboard="{StaticResource imgTreeAdd_MouseLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="imgTreeAdd">
            <BeginStoryboard x:Name="imgTreeAdd_MouseOver_BeginStoryboard1" Storyboard="{StaticResource imgTreeAdd_MouseOver}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="imgTreeAdd">
            <BeginStoryboard x:Name="imgTreeAdd_MouseLeave_BeginStoryboard1" Storyboard="{StaticResource imgTreeAdd_MouseLeave}"/>
        </EventTrigger>
    </TreeViewItem.Triggers>
    
    <TreeViewItem.Header>
        <Grid x:Name="grdTreeFolder" Height="22" Focusable="True" Margin="0,0,0,0" HorizontalAlignment="Left">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0*"/>
            </Grid.RowDefinitions>

            <Border x:Name="Bd" SnapsToDevicePixels="true" Margin="0,0,0,0" BorderThickness="1">
                <ContentPresenter x:Name="PART_Header" ContentSource="Header"/>
            </Border>

            <StackPanel x:Name="stackPanel" Orientation="Horizontal" Margin="0,0,0,0" Height="22" Focusable="True"  MouseEnter="stackPanel_MouseEnter" MouseLeave="stackPanel_MouseLeave" LostFocus="stackPanel_LostFocus" GotFocus="stackPanel_GotFocus" MouseLeftButtonUp="stackPanel_MouseLeftButtonUp" MouseLeftButtonDown="stackPanel_MouseLeftButtonDown" Grid.RowSpan="2" HorizontalAlignment="Left">
                <ToggleButton x:Name="Expander" Visibility="Hidden" Style="{DynamicResource SimpleTreeViewItemToggleButton}" ClickMode="Press" Width="11" Background="Transparent" Checked="Expander_Checked" Unchecked="Expander_Unchecked"/>
                <Image x:Name="imgLibrary" MouseUp="imgLibrary_MouseUp" Source="pack://application:,,,/Designer;component/res/icons/library.png" Stretch="Fill" Width="12" Margin="4,4,0,4" Opacity="0.8"/>
                <Label x:Name="label" Content="label" Style="{DynamicResource LabelStyle1}" MouseDoubleClick="label_DoubleClick"  MouseLeftButtonUp="label_MouseLeftButtonUp" Margin="0,2,0,0" Height="22" MinWidth="80">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource BH Text}"/>
                    </Label.Foreground>
                </Label>
                <Image x:Name="imgTreeAdd" Source="pack://application:,,,/Designer;component/res/icons/plussign.png" Stretch="Fill" Width="16" MouseUp="imgTreeAdd_MouseUp" Margin="0,0,0,0" Opacity="0.4" ToolTip="Add Block..." Height="16" Visibility="Collapsed" />
                <Image x:Name="imgTreeDelete" Source="pack://application:,,,/Designer;component/res/icons/delete.png" Stretch="Fill" Width="16" MouseUp="btnTreeMouseUp_Delete" Margin="0,0,0,0" Opacity="0.4" ToolTip="Remove Block..." Height="16"  />
                <Image x:Name="imgMore" Margin="0,0,0,0" Source="pack://application:,,,/Designer;component/res/icons/settingsMenu.png" Stretch="Fill" Width="16" Opacity="0.4" MouseLeftButtonUp="imgMore_MouseLeftButtonUp" Height="16" Visibility="Collapsed"/>

            </StackPanel>
            <TextBox x:Name="txtbox" TextWrapping="Wrap" Foreground="#FF000000" Background="#FFFFFFFF" Text="Test Label" GotKeyboardFocus="label_GotKeyboardFocus" LostKeyboardFocus="label_LostKeyboardFocus" KeyDown="txtbox_KeyDown" LostFocus="txtbox_LostFocus" Margin="20,0,0,0" Grid.RowSpan="2" d:IsHidden="True"/>
        </Grid>
    </TreeViewItem.Header>
</TreeViewItem>
